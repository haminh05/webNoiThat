@model cnpm.ViewModels.CartCheckoutViewModel
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Chú ý!</strong> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2>Xác nhận đơn hàng</h2>

@if (Model == null || Model.CartItems == null || !Model.CartItems.Any())
{
    <p class="alert alert-warning">Giỏ hàng của bạn trống!</p>
    <a href="@Url.Action("Index", "Cart")" class="btn btn-primary">Quay lại giỏ hàng</a>
}
else
{
    <table class="table table-bordered">
        <thead class="table-dark">
            <tr>
                <th>Hình ảnh</th>
                <th>Tên sản phẩm</th>
                <th>Giá</th>
                <th>Số lượng</th>
                <th>Thành tiền</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.CartItems)
            {
                <tr>
                    <td><img src="@item.ImageUrl" alt="@item.ProductName" width="50" class="img-thumbnail"></td>
                    <td>@item.ProductName</td>
                    <td>@item.Price.ToString("N0") VND</td>
                    <td>@item.Quantity</td>
                    <td>@($"{(int)(item.Price * item.Quantity):#,##0} VNĐ")</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-end">
        <h4 class="fw-bold">Tổng tiền: <span class="text-danger">@Model.CartItems.Sum(i => i.Price * i.Quantity).ToString("#,##0") VNĐ</span></h4>
    </div>

    <h3>Thông tin nhận hàng</h3>
    <form id="checkoutForm" asp-controller="Orders" asp-action="PlaceOrder" method="post">
        @Html.AntiForgeryToken()

        <div class="mb-3">
            <label for="FullName" class="form-label">Họ và Tên</label>
            <input type="text" class="form-control" id="FullName" name="FullName" asp-for="UserInformation.FullName" required pattern="^[A-Za-zÀ-ỹ\s]+$" title="Họ tên không được chứa số hoặc ký tự đặc biệt">
        </div>
        <div class="mb-3">
            <label for="PhoneNumber" class="form-label">Số điện thoại</label>
            <input type="text" class="form-control" id="PhoneNumber" name="PhoneNumber" asp-for="UserInformation.PhoneNumber" required pattern="^0\d{9}$" title="Số điện thoại phải có 10 chữ số và bắt đầu bằng 0">
        </div>
        <div class="mb-3">
            <label for="province" class="form-label">Tỉnh/Thành phố</label>
            <select class="form-select" id="province" required></select>
        </div>
        <div class="mb-3">
            <label for="district" class="form-label">Quận/Huyện</label>
            <select class="form-select" id="district" required></select>
        </div>
        <div class="mb-3">
            <label for="ward" class="form-label">Xã/Phường</label>
            <select class="form-select" id="ward" required></select>
        </div>
        <div class="mb-3">
            <label for="detailAddress" class="form-label">Địa chỉ cụ thể</label>
            <input type="text" class="form-control" id="detailAddress" required>
        </div>
        <input type="hidden" id="ShippingAddress" name="ShippingAddress" asp-for="UserInformation.ShippingAddress">
        <h4>Hình thức thanh toán</h4>
        <div class="alert alert-info">
            Thanh toán khi nhận hàng (COD)
        </div>

        <button type="submit" class="btn btn-success btn-lg">Xác nhận thanh toán</button>
    </form>

}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Load danh sách tỉnh/thành phố
        fetch("https://provinces.open-api.vn/api/?depth=1")
            .then(response => response.json())
            .then(provinces => {
                let provinceDropdown = document.getElementById("province");
                provinceDropdown.innerHTML = "<option value=''>Chọn tỉnh</option>";
                provinces.forEach(province => {
                    let option = document.createElement("option");
                    option.value = province.code;
                    option.text = province.name;
                    provinceDropdown.appendChild(option);
                });

                autoFillAddress(provinces);
            })
            .catch(error => console.error("Lỗi tải tỉnh/thành phố:", error));

        // Khi chọn tỉnh -> Load huyện
        document.getElementById("province").addEventListener("change", function () {
            let provinceCode = this.value;
            fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    let districtDropdown = document.getElementById("district");
                    districtDropdown.innerHTML = "<option value=''>Chọn huyện</option>";
                    data.districts.forEach(district => {
                        let option = document.createElement("option");
                        option.value = district.code;
                        option.text = district.name;
                        districtDropdown.appendChild(option);
                    });
                })
                .catch(error => console.error("Lỗi tải huyện/quận:", error));
        });

        // Khi chọn huyện -> Load xã
        document.getElementById("district").addEventListener("change", function () {
            let districtCode = this.value;
            fetch(`https://provinces.open-api.vn/api/d/${districtCode}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    let wardDropdown = document.getElementById("ward");
                    wardDropdown.innerHTML = "<option value=''>Chọn xã</option>";
                    data.wards.forEach(ward => {
                        let option = document.createElement("option");
                        option.value = ward.name;
                        option.text = ward.name;
                        wardDropdown.appendChild(option);
                    });
                })
                .catch(error => console.error("Lỗi tải xã/phường:", error));
        });

        // Khi submit form -> Gộp địa chỉ lại
        document.getElementById("checkoutForm").addEventListener("submit", function () {
            let province = document.getElementById("province").options[document.getElementById("province").selectedIndex]?.text || "";
            let district = document.getElementById("district").options[document.getElementById("district").selectedIndex]?.text || "";
            let ward = document.getElementById("ward").options[document.getElementById("ward").selectedIndex]?.text || "";
            let detailAddress = document.getElementById("detailAddress").value.trim();

            let fullAddress = [detailAddress, ward, district, province].filter(p => p).join(", ");
            document.getElementById("ShippingAddress").value = fullAddress;
        });

        // Tự động điền thông tin địa chỉ cũ
        function autoFillAddress(provinces) {
            let savedAddress = document.getElementById("ShippingAddress").value.trim();
            if (!savedAddress) return;

            let parts = savedAddress.split(", ");
            let provinceName = "", districtName = "", wardName = "", detail = "";

            // Tìm tỉnh trước
            provinceName = provinces.find(p => savedAddress.includes(p.name))?.name || "";
            let provinceCode = provinces.find(p => p.name === provinceName)?.code || null;

            if (provinceCode) {
                fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=2`)
                    .then(response => response.json())
                    .then(provinceData => {
                        let districtList = provinceData.districts;
                        districtName = districtList.find(d => savedAddress.includes(d.name))?.name || "";
                        let districtCode = districtList.find(d => d.name === districtName)?.code || null;

                        if (districtCode) {
                            fetch(`https://provinces.open-api.vn/api/d/${districtCode}?depth=2`)
                                .then(response => response.json())
                                .then(districtData => {
                                    let wardList = districtData.wards;
                                    wardName = wardList.find(w => savedAddress.includes(w.name))?.name || "";

                                    // Lọc phần địa chỉ chi tiết
                                    detail = parts.filter(p => p !== wardName && p !== districtName && p !== provinceName).join(", ");

                                    // Điền dữ liệu vào form
                                    document.getElementById("detailAddress").value = detail;
                                    document.getElementById("province").value = provinceCode;
                                    loadDistricts(provinceCode, districtName, districtCode, wardName);
                                });
                        }
                    });
            }
        }

        // Load danh sách huyện sau khi chọn tỉnh
        function loadDistricts(provinceCode, selectedDistrict, districtCode, selectedWard) {
            fetch(`https://provinces.open-api.vn/api/p/${provinceCode}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    let districtDropdown = document.getElementById("district");
                    districtDropdown.innerHTML = "<option value=''>Chọn huyện</option>";

                    data.districts.forEach(district => {
                        let option = document.createElement("option");
                        option.value = district.code;
                        option.text = district.name;
                        if (district.name === selectedDistrict) {
                            option.selected = true;
                        }
                        districtDropdown.appendChild(option);
                    });

                    if (districtCode) loadWards(districtCode, selectedWard);
                });
        }

        // Load danh sách xã sau khi chọn huyện
        function loadWards(districtCode, selectedWard) {
            fetch(`https://provinces.open-api.vn/api/d/${districtCode}?depth=2`)
                .then(response => response.json())
                .then(data => {
                    let wardDropdown = document.getElementById("ward");
                    wardDropdown.innerHTML = "<option value=''>Chọn xã</option>";

                    data.wards.forEach(ward => {
                        let option = document.createElement("option");
                        option.value = ward.name;
                        option.text = ward.name;
                        if (ward.name === selectedWard) {
                            option.selected = true;
                        }
                        wardDropdown.appendChild(option);
                    });
                });
        }
    });
</script>
