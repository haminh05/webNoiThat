@model List<cnpm.ViewModels.CartItemViewModel>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Chú ý!</strong> @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<h2>Xác nhận đơn hàng</h2>

@if (!Model.Any())
{
    <p class="alert alert-warning">Bạn chưa chọn sản phẩm nào để thanh toán.</p>
}
else
{
    <table class="table table-bordered">
        <thead class="table-dark">
            <tr>
                <th>Hình ảnh</th>
                <th>Tên sản phẩm</th>
                <th>Giá</th>
                <th>Số lượng</th>
                <th>Thành tiền</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td><img src="@item.ImageUrl" alt="@item.ProductName" width="50" class="img-thumbnail"></td>
                    <td>@item.ProductName</td>
                    <td>@item.Price.ToString("N0") VND</td>
                    <td>@item.Quantity</td>
                    <td class="text-success fw-bold total-price">@((item.Price * item.Quantity).ToString("#,##0")) VNĐ</td>

                </tr>
            }
        </tbody>
    </table>

    <div class="text-end">
        <h4 class="fw-bold">Tổng tiền: <span class="text-danger">@Model.Sum(i => i.Price * i.Quantity).ToString("#,##0") VNĐ</span></h4>

    </div>

    <div class="d-flex justify-content-between mt-3">
        <a asp-controller="Cart" asp-action="Index" class="btn btn-secondary">Quay lại giỏ hàng</a>
        <form asp-controller="Orders" asp-action="PlaceOrder" method="post">
            <button type="submit" class="btn btn-success btn-lg">Xác nhận thanh toán</button>
        </form>
    </div>
}


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const selectAll = document.getElementById('selectAll');
        const checkboxes = document.querySelectorAll('input[name="selectedProducts"]');
        const selectedProductsInput = document.getElementById('selectedProductsInput');
        const checkoutSelectedForm = document.getElementById('checkoutSelectedForm');

        // Cập nhật danh sách sản phẩm đã chọn vào input hidden
        function updateSelectedProducts() {
            let selected = [];
            checkboxes.forEach(checkbox => {
                if (checkbox.checked) {
                    selected.push(checkbox.value);
                }
            });
            selectedProductsInput.value = selected.join(",");
        }

        // Chọn tất cả sản phẩm
        selectAll?.addEventListener('change', function () {
            checkboxes.forEach(checkbox => checkbox.checked = this.checked);
            updateSelectedProducts();
        });

        // Khi chọn hoặc bỏ chọn sản phẩm
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateSelectedProducts);
        });

        // Trước khi gửi form, kiểm tra danh sách sản phẩm
        checkoutSelectedForm.addEventListener('submit', function (event) {
            updateSelectedProducts();
            if (!selectedProductsInput.value) {
                alert("Vui lòng chọn ít nhất một sản phẩm để mua!");
                event.preventDefault();
            }
        });
    });
</script>
